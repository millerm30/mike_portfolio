---
import "../styles/global.css";

interface Props {
  title?: string | undefined;
  description?: string | undefined;
  keywords?: string | undefined;
}

const {
  title = "Michael Miller: Software Developer",
  description = "The personal portfolio site of Michael Miller, a software developer based in Newfoundland, Canada.",
  keywords = "Michael Miller, Software Developer, Mobile Developer, Web Developer, Get Coding, Full-Stack Developer, Newfoundland, Canada",
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="keywords" content={keywords} />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<meta name="author" content="Michael Miller" />
<meta property="og:site_name" content="Michael Miller" />
<meta property="og:title" content={title} />
<meta property="og:type" content="website" />
<meta property="og:description" content={description} />
<meta property="og:url" content="https://www.michael-miller.ca" />
<meta property="og:image" content="/assets/ogtags.png" />

<!-- X-Frame-Options -->
<meta http-equiv="X-Frame-Options" content="DENY">
<meta content="text/html; charset=UTF-8; X-Content-Type-Options=nosniff" http-equiv="Content-Type" />

<!-- X-Content-Type-Options -->
<meta http-equiv="X-Content-Type-Options" content="nosniff">

<!-- Referrer-Policy -->
<meta http-equiv="Referrer-Policy" content="no-referrer-when-downgrade">

<!-- Permissions-Policy -->
<meta http-equiv="Permissions-Policy" content="geolocation=(self), microphone=()">

<!-- Facebook Meta Tags -->
<meta property="og:url" content="https://www.michael-miller.ca" />
<meta property="og:type" content="website" />
<meta property="og:title" content="Michael Miller: Software Developer" />
<meta
  property="og:description"
  content={description}
/>
<meta property="og:image" content="/assets/ogtags.png" />
<title>{title}</title>

<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="icon" type="image/png" href="/favicon.png" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
  href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
  rel="stylesheet"
/>
<script is:inline>
  // This code is inlined in the head to make dark mode instant & blocking.
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("theme-dark");

  if (typeof localStorage !== "undefined") {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("theme-dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
